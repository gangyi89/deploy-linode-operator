---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: clusterfirewalls.network.operator.linode.io
spec:
  group: network.operator.linode.io
  names:
    kind: ClusterFirewall
    listKind: ClusterFirewallList
    plural: clusterfirewalls
    singular: clusterfirewall
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterFirewall is the Schema for the clusterfirewalls API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterFirewallSpec defines the desired state of ClusterFirewall
            properties:
              apiKeySecret:
                properties:
                  key:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - key
                - name
                type: object
              firewallId:
                description: Foo is an example field of ClusterFirewall. Edit clusterfirewall_types.go
                  to remove/update
                type: integer
              interval:
                type: string
            required:
            - apiKeySecret
            - firewallId
            type: object
          status:
            description: ClusterFirewallStatus defines the observed state of ClusterFirewall
            properties:
              nodes:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: externalfirewalls.network.operator.linode.io
spec:
  group: network.operator.linode.io
  names:
    kind: ExternalFirewall
    listKind: ExternalFirewallList
    plural: externalfirewalls
    singular: externalfirewall
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ExternalFirewall is the Schema for the externalfirewalls API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ExternalFirewallSpec defines the desired state of ExternalFirewall
            properties:
              apiKeySecret:
                properties:
                  key:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - key
                - name
                - namespace
                type: object
              firewallId:
                type: integer
              inboundPolicy:
                type: string
              interval:
                type: string
              outboundPolicy:
                type: string
              rules:
                properties:
                  inbound:
                    items:
                      properties:
                        action:
                          type: string
                        label:
                          type: string
                        nodeSelector:
                          additionalProperties:
                            type: string
                          type: object
                        ports:
                          type: string
                        protocol:
                          type: string
                      required:
                      - action
                      - label
                      - ports
                      - protocol
                      type: object
                    type: array
                required:
                - inbound
                type: object
            required:
            - apiKeySecret
            - firewallId
            - inboundPolicy
            - outboundPolicy
            - rules
            type: object
          status:
            description: ExternalFirewallStatus defines the observed state of ExternalFirewall
            properties:
              appliedRules:
                description: AppliedRules represents the current state of applied
                  firewall rules
                items:
                  description: AppliedFirewallRule represents a firewall rule that
                    has been applied
                  properties:
                    appliedNodes:
                      description: AppliedNodes is a list of node names to which this
                        rule has been applied
                      items:
                        type: string
                      type: array
                    rule:
                      description: Rule is the firewall rule that was applied
                      properties:
                        action:
                          type: string
                        label:
                          type: string
                        nodeSelector:
                          additionalProperties:
                            type: string
                          type: object
                        ports:
                          type: string
                        protocol:
                          type: string
                      required:
                      - action
                      - label
                      - ports
                      - protocol
                      type: object
                  required:
                  - appliedNodes
                  - rule
                  type: object
                type: array
              conditions:
                description: Conditions represent the latest available observations
                  of the ExternalFirewall's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastSyncTime:
                description: LastSyncTime is the last time the firewall rules were
                  successfully synchronized
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: statichostroutes.network.operator.linode.io
spec:
  group: network.operator.linode.io
  names:
    kind: StaticHostRoutes
    listKind: StaticHostRoutesList
    plural: statichostroutes
    singular: statichostroutes
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: StaticHostRoutes is the Schema for the statichostroutes API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: StaticHostRoutesSpec defines the desired state of StaticHostRoutes
            properties:
              routes:
                description: Foo is an example field of StaticHostRoutes. Edit statichostroutes_types.go
                  to remove/update
                items:
                  properties:
                    cidr:
                      type: string
                    gateway:
                      type: string
                  required:
                  - cidr
                  - gateway
                  type: object
                type: array
            required:
            - routes
            type: object
          status:
            description: StaticHostRoutesStatus defines the observed state of StaticHostRoutes
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: vlans.network.operator.linode.io
spec:
  group: network.operator.linode.io
  names:
    kind: Vlan
    listKind: VlanList
    plural: vlans
    singular: vlan
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Vlan is the Schema for the vlans API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VlanSpec defines the desired state of Vlan
            properties:
              apiKeySecret:
                properties:
                  key:
                    type: string
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - key
                - name
                type: object
              interval:
                type: string
              vlanCidr:
                description: VlanCidr represents the CIDR range for the VLAN
                pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}(/([0-9]|[1-2][0-9]|3[0-2]))$
                type: string
              vlanLabel:
                type: string
            required:
            - apiKeySecret
            - vlanCidr
            - vlanLabel
            type: object
          status:
            description: VlanStatus defines the observed state of Vlan
            properties:
              nodes:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# permissions for end users to edit clusterfirewalls.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: linodeoperator
    app.kubernetes.io/managed-by: kustomize
  name: clusterfirewall-editor-role
rules:
- apiGroups:
  - firewall.operator.linode.io
  resources:
  - clusterfirewalls
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - firewall.operator.linode.io
  resources:
  - clusterfirewalls/status
  verbs:
  - get
---
# permissions for end users to view clusterfirewalls.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: linodeoperator
    app.kubernetes.io/managed-by: kustomize
  name: clusterfirewall-viewer-role
rules:
- apiGroups:
  - firewall.operator.linode.io
  resources:
  - clusterfirewalls
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - firewall.operator.linode.io
  resources:
  - clusterfirewalls/status
  verbs:
  - get
---
# permissions for end users to edit externalfirewalls.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: linodeoperator
    app.kubernetes.io/managed-by: kustomize
  name: externalfirewall-editor-role
rules:
- apiGroups:
  - firewall.operator.linode.io
  resources:
  - externalfirewalls
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - firewall.operator.linode.io
  resources:
  - externalfirewalls/status
  verbs:
  - get
---
# permissions for end users to view externalfirewalls.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: linodeoperator
    app.kubernetes.io/managed-by: kustomize
  name: externalfirewall-viewer-role
rules:
- apiGroups:
  - firewall.operator.linode.io
  resources:
  - externalfirewalls
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - firewall.operator.linode.io
  resources:
  - externalfirewalls/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: linodeoperator
    app.kubernetes.io/managed-by: kustomize
  name: leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
- kind: ServiceAccount
  name: linode-nw-operator
---
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: linodeoperator
    app.kubernetes.io/managed-by: kustomize
  name: leader-election-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: linodeoperator
    app.kubernetes.io/managed-by: kustomize
  name: manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager-role
subjects:
- kind: ServiceAccount
  name: linode-nw-operator
  namespace: default
---
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: manager-role
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - network.operator.linode.io
  resources:
  - clusterfirewalls
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - network.operator.linode.io
  resources:
  - clusterfirewalls/finalizers
  verbs:
  - update
- apiGroups:
  - network.operator.linode.io
  resources:
  - clusterfirewalls/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - network.operator.linode.io
  resources:
  - externalfirewalls
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - network.operator.linode.io
  resources:
  - externalfirewalls/finalizers
  verbs:
  - update
- apiGroups:
  - network.operator.linode.io
  resources:
  - externalfirewalls/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - network.operator.linode.io
  resources:
  - statichostroutes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - network.operator.linode.io
  resources:
  - statichostroutes/finalizers
  verbs:
  - update
- apiGroups:
  - network.operator.linode.io
  resources:
  - statichostroutes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - network.operator.linode.io
  resources:
  - vlans
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - network.operator.linode.io
  resources:
  - vlans/finalizers
  verbs:
  - update
- apiGroups:
  - network.operator.linode.io
  resources:
  - vlans/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: linodeoperator
    app.kubernetes.io/managed-by: kustomize
  name: linode-nw-operator
---
# permissions for end users to edit statichostroutes.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: linodeoperator
    app.kubernetes.io/managed-by: kustomize
  name: statichostroutes-editor-role
rules:
- apiGroups:
  - network.operator.linode.io
  resources:
  - statichostroutes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - network.operator.linode.io
  resources:
  - statichostroutes/status
  verbs:
  - get
---
# permissions for end users to view statichostroutes.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: linodeoperator
    app.kubernetes.io/managed-by: kustomize
  name: statichostroutes-viewer-role
rules:
- apiGroups:
  - network.operator.linode.io
  resources:
  - statichostroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - network.operator.linode.io
  resources:
  - statichostroutes/status
  verbs:
  - get
---
# permissions for end users to edit vlans.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: linodeoperator
    app.kubernetes.io/managed-by: kustomize
  name: vlan-editor-role
rules:
- apiGroups:
  - network.operator.linode.io
  resources:
  - vlans
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - network.operator.linode.io
  resources:
  - vlans/status
  verbs:
  - get
---
# permissions for end users to view vlans.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: linodeoperator
    app.kubernetes.io/managed-by: kustomize
  name: vlan-viewer-role
rules:
- apiGroups:
  - network.operator.linode.io
  resources:
  - vlans
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - network.operator.linode.io
  resources:
  - vlans/status
  verbs:
  - get
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linode-nw-operator
  labels:
    control-plane: linode-nw-operator
    app.kubernetes.io/name: linodeoperator
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: linode-nw-operator
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: linode-nw-operator
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      securityContext:
        runAsNonRoot: true
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        # seccompProfile:
        #   type: RuntimeDefault
      containers:
      - command:
        - /manager
        args:
          - --leader-elect
          - --health-probe-bind-address=:8081
        image: gangyi89/linode-network-operator:0.0.1
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: linode-nw-operator
      terminationGracePeriodSeconds: 10